<h1>Hello <%= current_user.email  %></h1>

<div id="signin-button"></div>
<script src="//cdnjs.cloudflare.com/ajax/libs/dropbox.js/0.10.2/dropbox.min.js">
</script>

<script>
function saveUser (token){
  $.post( "/users/save_token", {dropBoxToken:token});
}


<% if current_user.connected_to_dropbox?%>
  var client = new Dropbox.Client({token: '<%= current_user.dropbox_token %>'})
  alert("I got yr dropbox info so I logged you in!!!!")
<% else %>
  var client = new Dropbox.Client({ key: '<%= ENV['APP_KEY'] %>' });
  client.authenticate({interactive: false}, function(error, client) {
  if (error) {
    return handleError(error);
  }
  if (client.isAuthenticated()) {
    saveUser(client.credentials().token)
    // Cached credentials are available, make Dropbox API calls.
    alert("you were already authenticated!")
  } else {
    // show and set up the "Sign into Dropbox" button
    
    var buttonDiv = $("#signin-button");
    buttonDiv.append("Click here to Sign In to Dropbox")
    buttonDiv.on("click", function() {
      // The user will have to click an 'Authorize' button.
      client.authenticate(function(error, client) {
        if (error) {
          return handleError(error);
        }
      });
    });
  }
});
<% end %>

</script>

<!-- client.authenticate({interactive: false}, function(error, client) {
  if (error) {
    return handleError(error);
  }
  if (client.isAuthenticated()) {
    // Cached credentials are available, make Dropbox API calls.
    doSomethingCool();
  } else {
    // show and set up the "Sign into Dropbox" button
    var button = document.querySelector("#signin-button");
    button.setAttribute("class", "visible");
    button.addEventListener("click", function() {
      // The user will have to click an 'Authorize' button.
      client.authenticate(function(error, client) {
        if (error) {
          return handleError(error);
        }
        doSomethingCool();
      });
    });
  }
}); -->

<!-- 
if user has dropbox token
create a new client object with js
alert blah


else
direct to oauth flow
once you get code
  create a new client object with js
  make call to server
  server gets reusable token and saves it to db associated with user
when all that's successful alert bloop

 -->